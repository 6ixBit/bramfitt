{"remainingRequest":"/Users/hamzacarew/Desktop/Take home/bramfitt/client/node_modules/babel-loader/lib/index.js!/Users/hamzacarew/Desktop/Take home/bramfitt/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hamzacarew/Desktop/Take home/bramfitt/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzacarew/Desktop/Take home/bramfitt/client/src/views/History.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hamzacarew/Desktop/Take home/bramfitt/client/src/views/History.vue","mtime":1610632572406},{"path":"/Users/hamzacarew/Desktop/Take home/bramfitt/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzacarew/Desktop/Take home/bramfitt/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hamzacarew/Desktop/Take home/bramfitt/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzacarew/Desktop/Take home/bramfitt/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2hhbXphY2FyZXcvRGVza3RvcC9UYWtlIGhvbWUvYnJhbWZpdHQvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFRhYmxlIGZyb20gJ0AvY29tcG9uZW50cy90YWJsZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSGlzdG9yeSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlc3VsdHM6IFtdCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgVGFibGU6IFRhYmxlCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRSZXN1bHRzOiBmdW5jdGlvbiBnZXRSZXN1bHRzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjUwMDAvZGIiKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLnJlc3VsdHMgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiRmFpbGVkIHRvIGdldCBoaXN0b3JpY2FsIEFQSSByZXF1ZXN0cyBmcm9tIERCIik7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF90aGlzMi5nZXRSZXN1bHRzKCk7CgogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["History.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAYA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GAPA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,GAAA,CAAA,0BAAA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAIA,gBAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA;AAJA;AAAA;;AAAA;AAAA;AAAA;AAMA,gBAAA,OAAA,CAAA,GAAA,CAAA,+CAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AATA,GAVA;AAqBA,EAAA,OArBA,qBAqBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,MAAA,CAAA,UAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAvBA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1 class=\"title\">\n      Historical API Calls\n    </h1>\n\n    <Table :data=\"results\"/>\n    \n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Table from '@/components/table'\n\nexport default {\n    name: \"History\",\n    data() {\n      return {\n        results: []\n      }\n    },\n    components: {\n      Table: Table\n    },\n    methods: {\n      async getResults() {\n        try {\n          let res = await axios.get(\"http://localhost:5000/db\")\n\n          this.results = res.data\n        } catch(e) {\n          console.log(\"Failed to get historical API requests from DB\")\n        }\n      }\n    },\n    async mounted() {\n      this.getResults()\n    }\n}\n</script>\n\n<style scoped>\n.title {\n  @apply text-2xl font-black my-2;\n}\n \n.result-list {\n  @apply mt-8 list-disc;\n}\n\n</style>"],"sourceRoot":"src/views"}]}